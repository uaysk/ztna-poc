user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Define a resolver to use Docker's internal DNS
    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;
        server_name localhost;

        # Internal location for auth checks (prefix match)
        location /api/check_auth {
            internal;
            # Forward the path + query reliably for subrequests
            proxy_pass http://backend:8000$uri$is_args$args;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            # Forward client cookies so backend sees session_id/admin_session_id
            proxy_set_header Cookie $http_cookie;
        }

        # Generic API proxy to backend
        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Admin API proxy to backend
        location /admin/ {
            proxy_pass http://backend:8000/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Login/Logout proxy
        location /login {
            proxy_pass http://backend:8000/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /logout {
            proxy_pass http://backend:8000/logout;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Frontend files
        location / {
            root   /usr/share/nginx/html;
            index  user_login.html index.html index.htm;
            try_files $uri $uri/ /user_login.html;
        }

        # Error response for auth failures
        location @error_response {
            # You can customize this response
            return 403 'Forbidden by ZTNA policy';
        }

        # Include dynamically generated service configs
        include /etc/nginx/conf.d/*.conf;
    }
}
